{"version":3,"file":"static/js/141.0637e8e1.chunk.js","mappings":"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","sources":["components/Api.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7f4bd829091e57f20883be4180a933f3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 8px 32px 10px 8px;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 10px 10px 7px;\n  cursor: pointer;\n`;\n","import { Input, Button } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n  };\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <Input\n        type=\"text\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { getQuery } from 'components/Api';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialQuery = searchParams.get('query') || '';\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState(initialQuery);\n  const [searchStarted, setSearchStarted] = useState(false);\n\n  const location = useLocation();\n\n  const onSearch = inputValue => {\n    if (inputValue === '') {\n      return;\n    }\n    setQuery(inputValue);\n    setSearchParams(new URLSearchParams({ query: inputValue }));\n    setSearchStarted(true);\n  };\n\n  const fetchMovies = useCallback(async () => {\n    const searchingMovies = await getQuery(query);\n    setMovies(searchingMovies);\n  }, [query]);\n\n  useEffect(() => {\n    if (query !== '') {\n      fetchMovies();\n    }\n  }, [query, fetchMovies]);\n\n  return (\n    <>\n      <SearchBox onSubmit={onSearch} inputValue={query} />\n      {searchStarted && movies.length === 0 && (\n        <div style={{ marginTop: '20px' }}>\n          Unfortunately, we have not been able to find a video matching your\n          inquiry. Please try again.\n        </div>\n      )}\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["KEY","axios","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_context","prev","next","concat","sent","abrupt","data","cast","stop","_x","apply","arguments","getReviews","_ref2","_callee2","_context2","results","_x2","getTrending","_ref3","_callee3","_context3","getDetails","_ref4","_callee4","_context4","_x3","getQuery","_ref5","_callee5","query","_context5","_x4","Input","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","SearchBox","onSubmit","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsxs","e","preventDefault","children","_jsx","type","value","onChange","target","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","initialQuery","get","movies","setMovies","_useState3","_useState4","setQuery","_useState5","_useState6","searchStarted","setSearchStarted","location","useLocation","fetchMovies","useCallback","searchingMovies","useEffect","_Fragment","URLSearchParams","length","style","marginTop","map","movie","Link","to","id","state","from","title"],"sourceRoot":""}